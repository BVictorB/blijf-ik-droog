{"version":3,"sources":["scripts/modules/getData.js","scripts/modules/createElement.js","scripts/modules/removeChildren.js","scripts/modules/renderOutcome.js","scripts/modules/calcDryMinutes.js","scripts/config/api.js","scripts/modules/getCoords.js","scripts/config/elements.js","scripts/modules/getGeoLocation.js","scripts/app.js"],"names":["getData","url","fetch","then","res","json","catch","err","console","log","createElement","tag","classNames","text","src","href","children","parent","el","document","forEach","className","classList","add","innerText","child","appendChild","removeChildren","firstChild","removeChild","renderOutcome","minutes","container","querySelector","currentDate","Date","formatDepartTime","getTime","toLocaleTimeString","hour","minute","dryShirt","wetShirt","calcDryMinutes","data","neededMinutes","minuteAmount","firstMinute","dryMinutes","reduce","array","index","precipitation","push","dryMinute","weatherAPIKey","locationAPIKey","weatherEndpoint","locationEndpoint","exclude","getCoords","place","results","geometry","form","geoButton","city","querySelectorAll","getGeoLocation","position","lat","coords","latitude","lng","longitude","remove","value","components","addEventListener","e","preventDefault","weatherURL","weatherData","minutely","navigator","geolocation","getCurrentPosition"],"mappings":"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","file":"app.6977cfd0.js","sourceRoot":"..","sourcesContent":["const getData = (url) => {\n  return fetch(url)\n    .then(res => res.json())\n    .catch((err) => console.log(`Error: ${err}`))\n}\n\nexport default getData\n","const createElement = (tag, { classNames, text, src, href, children, parent }) => {\n  const el = document.createElement(tag)\n\n  classNames && classNames.forEach(className => el.classList.add(className))\n  text && (el.innerText = text)\n  src && (el.src = src)\n  href && (el.href = href)\n  children && children.forEach(child => el.appendChild(child))\n  parent && parent.appendChild(el)\n\n  return el\n}\n\nexport default createElement\n","const removeChildren = (parent) => {\n  while (parent.firstChild) {\n    parent.removeChild(parent.firstChild)\n  }\n}\n\nexport default removeChildren\n","import createElement from './createElement'\nimport removeChildren from './removeChildren'\nimport wetShirt from '../../images/wet-shirt.png'\nimport dryShirt from '../../images/dry-shirt.png'\n\nconst renderOutcome = (minutes) => {\n  const container = document.querySelector('.result')\n  removeChildren(container)\n\n  const\n    currentDate = new Date(),\n    departTime = new Date(currentDate.getTime() + (minutes - 1) * 60000),\n    formatDepartTime = departTime.toLocaleTimeString([], {hour: '2-digit', minute: '2-digit'})\n  \n  createElement('h2', {\n    text: minutes ? `Als je om ${formatDepartTime} vertrekt blijf je droog.` : `Je kan het komende uur niet vertrekken zonder nat te worden.`,\n    parent: container\n  })\n\n  createElement('img', {\n    src: minutes ? dryShirt : wetShirt,\n    classNames: ['result-image'],\n    parent: container\n  })\n}\n\nexport default renderOutcome\n","const calcDryMinutes = (data, neededMinutes) => {\n  let \n    minuteAmount = 0,\n    firstMinute = null\n\n  const dryMinutes = data.reduce((array, minute, index) => {\n    minute.precipitation === 0 && array.push(index)\n    return array\n  }, [])\n\n  dryMinutes.forEach((dryMinute, index) => {\n    if (minuteAmount >= neededMinutes) { return }\n    if (dryMinute - 1 === dryMinutes[index - 1]) {\n      minuteAmount++\n      firstMinute === null ? firstMinute = dryMinute : null\n    } else {\n      minuteAmount = 0\n      firstMinute = null\n    }\n  })\n\n  return minuteAmount >= neededMinutes ? firstMinute : null\n}\n\nexport default calcDryMinutes\n","export const \n  weatherAPIKey = 'c6d3274323a8201fd1939ef229fc0078',\n  locationAPIKey = 'c2b0d7efe5404c009235e07bcaf81a3a',\n  weatherEndpoint = 'https://api.openweathermap.org/data/2.5/onecall?',\n  locationEndpoint = 'https://api.opencagedata.com/geocode/v1/json?',\n  exclude = 'current,hourly,daily,alerts'\n","import getData from './getData'\nimport { locationAPIKey, locationEndpoint } from '../config/api'\n\nconst getCoords = (place) => {\n  const url = `${locationEndpoint}q=${place}&key=${locationAPIKey}`\n\n  return getData(url)\n    .then(data => data.results[0].geometry)\n}\n\nexport default getCoords\n","export const\n  form = document.querySelector('form'),\n  geoButton = document.querySelector('.geolocation'),\n  city = form.querySelectorAll('input')[0],\n  neededMinutes = form.querySelectorAll('input')[1]\n","import getData from './getData'\nimport { locationAPIKey, locationEndpoint } from '../config/api'\nimport { city, geoButton } from '../config/elements'\n\nconst getGeoLocation = (position) => {\n  const \n    lat = position.coords.latitude,\n    lng = position.coords.longitude\n  \n  geoButton.classList.remove('loading')\n\n  getData(`${locationEndpoint}q=${lat}+${lng}&key=${locationAPIKey}`)\n    .then(data => {\n      city.value = data.results[0].components.city\n    })\n}\n\nexport default getGeoLocation\n","import getData from './modules/getData'\nimport renderOutcome from './modules/renderOutcome'\nimport calcDryMinutes from './modules/calcDryMinutes'\nimport getCoords from './modules/getCoords'\nimport getGeoLocation from './modules/getGeoLocation'\nimport { weatherAPIKey, weatherEndpoint, exclude } from './config/api'\nimport { form, geoButton, city, neededMinutes } from './config/elements'\n\nform.addEventListener('submit', async (e) => {\n  e.preventDefault()\n\n  const \n    coords = await getCoords(city.value),\n    weatherURL = `${weatherEndpoint}lat=${coords.lat}&lon=${coords.lng}&exclude=${exclude}&appid=${weatherAPIKey}`,\n    weatherData = await getData(weatherURL),\n    dryMinutes = calcDryMinutes(weatherData.minutely, neededMinutes.value)\n  \n  renderOutcome(dryMinutes)\n})\n\ngeoButton.addEventListener('click', () => {\n  geoButton.classList.add('loading')\n  navigator.geolocation.getCurrentPosition(getGeoLocation)\n})\n"]}